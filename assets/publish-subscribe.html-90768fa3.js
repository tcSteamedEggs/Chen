const e=JSON.parse('{"key":"v-469460fc","path":"/posts/publish-subscribe.html","title":"发布订阅模式","lang":"zh-CN","frontmatter":{"title":"发布订阅模式","icon":"edit","date":"2022-12-14T00:00:00.000Z","star":true,"sticky":true,"category":["设计模式"],"description":"在 JavaScript中，发布订阅模式（也称为观察者模式）是一种常用的设计模式，可以让不同对象之间以一种松耦合的方式进行通信。这种模式在实际项目中具有广泛的应用，可以提高代码的可维护性和灵活性。本文将通过通俗易懂的语言，深入探讨 JavaScript 中的发布订阅模式，介绍其基本概念和用法，并通过具体的代码示例来演示如何在实际项目中应用这种设计模式。 概要是用 chatgpt 生成的 ~ 觉得如何呢 ~","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/chen/posts/publish-subscribe.html"}],["meta",{"property":"og:site_name","content":"Chen"}],["meta",{"property":"og:title","content":"发布订阅模式"}],["meta",{"property":"og:description","content":"在 JavaScript中，发布订阅模式（也称为观察者模式）是一种常用的设计模式，可以让不同对象之间以一种松耦合的方式进行通信。这种模式在实际项目中具有广泛的应用，可以提高代码的可维护性和灵活性。本文将通过通俗易懂的语言，深入探讨 JavaScript 中的发布订阅模式，介绍其基本概念和用法，并通过具体的代码示例来演示如何在实际项目中应用这种设计模式。 概要是用 chatgpt 生成的 ~ 觉得如何呢 ~"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-13T13:59:23.000Z"}],["meta",{"property":"article:author","content":"Chen"}],["meta",{"property":"article:published_time","content":"2022-12-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-13T13:59:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"发布订阅模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-12-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-13T13:59:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Chen\\"}]}"]]},"headers":[{"level":2,"title":"1.1 基本概念","slug":"_1-1-基本概念","link":"#_1-1-基本概念","children":[]},{"level":2,"title":"1.2 基本用途","slug":"_1-2-基本用途","link":"#_1-2-基本用途","children":[]},{"level":2,"title":"1.3 优点","slug":"_1-3-优点","link":"#_1-3-优点","children":[]},{"level":2,"title":"3.1 搭建基本结构","slug":"_3-1-搭建基本结构","link":"#_3-1-搭建基本结构","children":[]},{"level":2,"title":"3.2 初始化消息队列","slug":"_3-2-初始化消息队列","link":"#_3-2-初始化消息队列","children":[]},{"level":2,"title":"3.3 $on 方法编写","slug":"_3-3-on-方法编写","link":"#_3-3-on-方法编写","children":[]},{"level":2,"title":"3.4 $off 方法编写","slug":"_3-4-off-方法编写","link":"#_3-4-off-方法编写","children":[]},{"level":2,"title":"3.5 $emit 方法编写","slug":"_3-5-emit-方法编写","link":"#_3-5-emit-方法编写","children":[]},{"level":2,"title":"4.1 杂志订阅","slug":"_4-1-杂志订阅","link":"#_4-1-杂志订阅","children":[]}],"git":{"createdTime":1681394363000,"updatedTime":1681394363000,"contributors":[{"name":"tcSteamedEggs","email":"858008221@qq.com","commits":1}]},"readingTime":{"minutes":10.08,"words":3023},"filePathRelative":"posts/publish-subscribe.md","localizedDate":"2022年12月14日","excerpt":"<p>在 <code>JavaScript</code>中，发布订阅模式（也称为观察者模式）是一种常用的设计模式，可以让不同对象之间以一种松耦合的方式进行通信。这种模式在实际项目中具有广泛的应用，可以提高代码的可维护性和灵活性。本文将通过通俗易懂的语言，深入探讨 <code>JavaScript</code> 中的发布订阅模式，介绍其基本概念和用法，并通过具体的代码示例来演示如何在实际项目中应用这种设计模式。</p>\\n<blockquote>\\n<p>概要是用 <code>chatgpt</code> 生成的 ~ 觉得如何呢 ~</p>\\n</blockquote>\\n","autoDesc":true}');export{e as data};
